.generate-columns(12);
.generate-columns(@n, @i: 1) when (@i =< @n) {
  .col-@{i} {
    width: (@i * 100% / @n);
    display: inline-block;
  }
  .generate-columns(@n, (@i + 1));
}


.generate-divide(100);
.generate-divide(@n, @i: 0) when (@i =< @n) {
	.divide@{i} {
		height: @i * 1px;
		display: block;
		width: 100%;
	}
	.generate-divide(@n, (@i + 5));
}

.float-left{float: left !important;}
.float-right{float: right !important;}

li{list-style: none;}


/* Config columns ! */
@media screen and (max-width: 992px) and (min-width: 1999px) {
	.generate-mdcolumns(12);
	.generate-mdcolumns(@n, @i: 1) when (@i =< @n) {
	  .md-@{i} {
	    width: (@i * 100% / @n);
	    display: inline-block;
	  }
	  .generate-mdcolumns(@n, (@i + 1));
	}
}

@media (min-width: 768px) and (max-width: 991px) {
	.generate-smcolumns(12);
	.generate-smcolumns(@n, @i: 1) when (@i =< @n) {
	  .sm-@{i} {
	    width: (@i * 100% / @n);
	    display: inline-block;
	  }
	  .generate-smcolumns(@n, (@i + 1));
	}
}

@media screen and (max-width: 767px) {
	.generate-xscolumns(12);
	.generate-xscolumns(@n, @i: 1) when (@i =< @n) {
	  .xs-@{i} {
	    width: (@i * 100% / @n);
	    display: inline-block;
	  }
	  .generate-xscolumns(@n, (@i + 1));
	}
}